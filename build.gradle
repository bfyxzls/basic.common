buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        mavenLocal()
        maven {
            name "aliyun1"
            url 'http://maven.aliyun.com/nexus/content/groups/public'
        }
        maven {
            name "aliyun2"
            url 'http://maven.aliyun.com/mvn/repository/'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

    ext {
        springCloudVersion = 'Finchley.SR1'
    }
}


apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'idea'

group = 'com.lind'
version = '0.0.3'
sourceCompatibility = '1.8'

repositories {
    mavenLocal()
    maven {
        name "aliyun1"
        url 'http://maven.aliyun.com/nexus/content/groups/public'
    }
    maven {
        name "aliyun2"
        url 'http://maven.aliyun.com/mvn/repository/'
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
}

dependencies {
    compile(
            'org.springframework.boot:spring-boot-starter-web',
            'com.google.collections:google-collections:1.0-rc2',//集合扩展类库
            'com.alibaba:fastjson:1.2.35',//json序列化
            'com.google.guava:guava:24.1-jre',//guava扩展方法类库
            'org.apache.commons:commons-lang3:3.5',
    )
    runtime 'mysql:mysql-connector-java:5.1.44'
    compileOnly('org.projectlombok:lombok')
    testCompileOnly('org.projectlombok:lombok')
    testCompile(
            'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.boot:spring-boot-starter-data-jpa')
}

bootJar.enabled = false // 不要求启动项目，不需要main方法
jar.enabled = true // 需要在build/libs下生成jar文件

apply plugin: "maven-publish"
task sourceJar(type: Jar) {
    // main程序代码会打包，而test模型不会被打进包里
    from sourceSets.main.allJava
}
publishing {
    publications {
        maven(MavenPublication) {
            //打包源码和class
            from components.java    //发布java组件
            //定义源码task,这个与classifier "sources"对应
            //artifact sourceJar
        }
    }

    //定义目标仓库 (包所存放的地方)
    repositories {
        // 本地仓库
        mavenLocal()

        // 远程仓库
        maven {
            if (project.version.endsWith('-SNAPSHOT')) {
                url = "https://repo.rdc.aliyun.com/repository/44454-snapshot-Ejfhso"
            } else {
                url = "https://repo.rdc.aliyun.com/repository/44454-release-3afmGw"
            }
            credentials {
                username 'fTMcrA'
                password 'uCQE7YXL3d'
            }
        }
    }
}
